#pragma once

#include "CPedComponents.hpp"

#pragma pack(push, 4)
class CPlayerAppearanceDataNode
{
public:
	char pad_0x0[192]; //0xB0
	uint32_t unk_0xC0[52]; //0xC0
	class CPedComponents components; //0x190
	char pad_0x258[8]; //0x258
	uint32_t unk_0x260[6]; //0x260
	uint32_t unk_0x278[6]; //0x278
	char pad_0x290[8]; //0x290
	float unk_0x298; //0x298
	uint8_t unk_0x29C; //0x29C
	uint8_t unk_0x29D; //0x29D
	char pad_0x29E[26]; //0x29E
	float m_shape_mix; //0x2B8
	float m_skin_mix; //0x2BC
	float m_third_mix; //0x2C0
	float unk_0x2C4; //0x2C4
	float unk_0x2C8[13]; //0x2C8
	float unk_0x2FC[13]; //0x2FC
	float unk_0x330[20]; //0x330
	uint8_t unk_0x380[13]; //0x380
	uint8_t unk_0x38D[13]; //0x38D
	uint8_t unk_0x39A[13]; //0x39A
	uint8_t m_shape_first; //0x3A7
	uint8_t m_shape_second; //0x3A8
	uint8_t m_shape_third; //0x3A9
	uint8_t m_skin_first; //0x3AA
	uint8_t m_skin_second; //0x3AB
	uint8_t m_skin_third; //0x3AC
	uint8_t unk_0x3AD[13]; //0x3AD
	uint8_t unk_0x3BA[11]; //0x3BA
	int16_t unk_0x3C6; //0x3C6
	uint8_t unk_0x3C8; //0x3C8
	uint8_t unk_0x3C9; //0x3C9
	char pad_0x3CA[1]; //0x3CA
	bool unk_0x3CB; //0x3CB
	bool unk_0x3CC; //0x3CC
	char pad_0x3CD[3]; //0x3CD
	uint32_t unk_0x3D0; //0x3D0
	uint32_t unk_0x3D4; //0x3D4
	uint32_t unk_0x3D8; //0x3D8
	uint32_t unk_0x3DC; //0x3DC
	uint32_t unk_0x3E0; //0x3E0
	float unk_0x3E4; //0x3E4
	float unk_0x3E8; //0x3E8
	float unk_0x3EC; //0x3EC
	uint32_t unk_0x3F0; //0x3F0
	uint32_t unk_0x3F4; //0x3F4
	uint32_t unk_0x3F8; //0x3F8
	uint32_t unk_0x3FC; //0x3FC
	uint32_t unk_0x400; //0x400
	bool unk_0x404; //0x404
	bool unk_0x405; //0x405
	bool unk_0x406; //0x406
	bool unk_0x407; //0x407
	bool unk_0x408; //0x408
	bool unk_0x409; //0x409
	uint32_t unk_0x40C; //0x40C
	uint32_t m_model_hash; //0x410
	uint32_t m_voice_hash; //0x414
	uint32_t m_phone_mode; //0x418
	uint32_t unk_0x41C; //0x41C
	uint8_t m_parachute_tint_index; //0x420
	uint8_t m_parachute_pack_tint_index; //0x421
	uint16_t m_respawn_object; //0x422
	bool m_has_head_blend_data; //0x424
	bool unk_0x425; //0x425
	bool m_has_respawn_object; //0x426
	char pad_0x427; //0x427
	uint32_t unk_0x428_clip_maybe; //0x428
	uint32_t unk_0x42C; //0x42C
	uint32_t unk_0x430; //0x430
	bool unk_0x434; //0x434
	bool unk_0x435; //0x435
	bool unk_0x436; //0x436
	uint8_t unk_0x437; //0x437
	uint16_t unk_0x438; //0x438
	uint16_t unk_0x43A; //0x43A
	uint16_t unk_0x43C; //0x43C
	bool unk_0x43E; //0x43E
	bool unk_0x43F; //0x43F
	bool unk_0x440; //0x440
	uint8_t unk_0x441; //0x441
	uint32_t unk_0x442; //0x442
	uint32_t unk_0x446; //0x446
};
static_assert(sizeof(CPlayerAppearanceDataNode) == 0x44C);
#pragma pack(pop)